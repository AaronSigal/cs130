Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~
CMakeCCompilerId.c:321:64: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
                                                                ^~~
CMakeCCompilerId.c:608:64: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
                                                                ^~~
CMakeCCompilerId.c:609:60: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
                                                            ^~~
CMakeCCompilerId.c:629:43: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
   "INFO" ":" "dialect_default[" C_DIALECT "]";
                                           ^~~
CMakeCCompilerId.c:637:10: error: cannot declare '::main' to be a global variable
 int main(argc, argv) int argc; char *argv[];
          ^~~~
CMakeCCompilerId.c:637:10: error: 'argc' was not declared in this scope
CMakeCCompilerId.c:637:16: error: 'argv' was not declared in this scope
 int main(argc, argv) int argc; char *argv[];
                ^~~~
CMakeCCompilerId.c:637:20: error: expression list treated as compound expression in initializer [-fpermissive]
 int main(argc, argv) int argc; char *argv[];
                    ^
CMakeCCompilerId.c:637:38: error: storage size of 'argv' isn't known
 int main(argc, argv) int argc; char *argv[];
                                      ^~~~
CMakeCCompilerId.c:641:1: error: expected unqualified-id before '{' token
 {
 ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++.exe: warning: '-mcpu=' is deprecated; use '-mtune=' or '-march=' instead
g++.exe: error: unrecognized command line option '--target=arm-arm-none-eabi'


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~
CMakeCCompilerId.c:321:64: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
                                                                ^~~
CMakeCCompilerId.c:608:64: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
                                                                ^~~
CMakeCCompilerId.c:609:60: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
                                                            ^~~
CMakeCCompilerId.c:629:43: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
   "INFO" ":" "dialect_default[" C_DIALECT "]";
                                           ^~~
CMakeCCompilerId.c:637:10: error: cannot declare '::main' to be a global variable
 int main(argc, argv) int argc; char *argv[];
          ^~~~
CMakeCCompilerId.c:637:10: error: 'argc' was not declared in this scope
CMakeCCompilerId.c:637:16: error: 'argv' was not declared in this scope
 int main(argc, argv) int argc; char *argv[];
                ^~~~
CMakeCCompilerId.c:637:20: error: expression list treated as compound expression in initializer [-fpermissive]
 int main(argc, argv) int argc; char *argv[];
                    ^
CMakeCCompilerId.c:637:38: error: storage size of 'argv' isn't known
 int main(argc, argv) int argc; char *argv[];
                                      ^~~~
CMakeCCompilerId.c:641:1: error: expected unqualified-id before '{' token
 {
 ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++.exe: warning: '-mcpu=' is deprecated; use '-mtune=' or '-march=' instead
g++.exe: error: unrecognized command line option '--target=arm-arm-none-eabi'


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++.exe: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++.exe: fatal error: no input files
compilation terminated.
Determining if the C compiler works failed with the following output:
Change Dir: C:/cygwin64/home/Aaron/cs130/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/PROGRA~1/CMake/bin/cmake.exe cmTC_929a3/fast && CMake Error: The source directory "C:/cygwin64/home/Aaron/cs130/cmake-build-debug/CMakeFiles/CMakeTmp/cmTC_929a3/fast" does not exist.
Specify --help for usage, or press the help button on the CMake GUI.



